---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: paperless
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    initContainers:
      init-db:
        image:
          repository: ghcr.io/onedr0p/postgres-init
          tag: 16
        envFrom: &enfFrom
          - secretRef:
              name: paperless-secret
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"
    image:
      repository: ghcr.io/paperless-ngx/paperless-ngx
      tag: 2.4.0
    env:
      PAPERLESS_CONSUMER_POLLING: 60
      PAPERLESS_CONSUMER_RECURSIVE: "true"
      PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: "true"
      PAPERLESS_CONSUMPTION_DIR: /data/nas/incoming
      PAPERLESS_DATA_DIR: /data/local/data
      PAPERLESS_EXPORT_DIR: /data/nas/export
      PAPERLESS_MEDIA_ROOT: /data/local/media
      PAPERLESS_ENABLE_HTTP_REMOTE_USER: "true"
      PAPERLESS_HTTP_REMOTE_USER_HEADER_NAME: HTTP_X_AUTHENTIK_USERNAME
      PAPERLESS_OCR_LANGUAGE: eng
      PAPERLESS_PORT: &port 80
      PAPERLESS_REDIS: redis://localhost:6379
      PAPERLESS_WEBSERVER_WORKERS: "2"
      PAPERLESS_TASK_WORKERS: 2
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://localhost:3000
      PAPERLESS_TIKA_ENDPOINT: http://localhost:9998
      PAPERLESS_TIME_ZONE: America/Chicago
      PAPERLESS_URL: "https://paperless.${SECRET_DOMAIN}"
      USERMAP_UID: 568
      USERMAP_GID: 568
    envFrom:
      - secretRef:
          name: paperless-secret
    pod:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        runAsNonRoot: true
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        className: internal
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      data:
        enabled: true
        existingClaim: "${VOLSYNC_CLAIM}"
        advancedMounts:
          main:
            main:
              - path: /data/local
      nas:
        enabled: true
        type: nfs
        server: 10.26.10.5
        path: /volume1/nfs-slow/paperless
        globalMounts:
          - path: /data/nas
    resources:
      requests:
        cpu: 100m
        memory: 1000Mi
      limits:
        memory: 5000Mi
    sidecars:
      gotenburg:
        image: thecodingmachine/gotenberg:8.0.2
        imagePullPolicy: IfNotPresent
        env:
          - { name: DISABLE_GOOGLE_CHROME, value: "1" }
      redis:
        image: public.ecr.aws/docker/library/redis:7.2.3
        imagePullPolicy: IfNotPresent
      tika:
        image: ghcr.io/paperless-ngx/tika:2.9.0-full
        imagePullPolicy: IfNotPresent
