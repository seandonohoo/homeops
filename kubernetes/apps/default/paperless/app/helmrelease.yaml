---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: paperless
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: volsync
      namespace: volsync
    - name: paperless-gotenberg
      namespace: default
    - name: paperless-tika
      namespace: default
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: paperless-secret
        containers:
          main:
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 2.4.0@sha256:4e2f8d81d7d4b4af91a85982d6b3cec2012c62b526304c9fb1de5b4e813493b4
            env:
              PAPERLESS_CONSUMER_POLLING: 60
              PAPERLESS_CONSUMER_RECURSIVE: "true"
              PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: "true"
              PAPERLESS_CONSUMPTION_DIR: /data/nas/incoming
              PAPERLESS_DATA_DIR: /data/local/data
              PAPERLESS_EXPORT_DIR: /data/nas/export
              PAPERLESS_MEDIA_ROOT: /data/local/media
              PAPERLESS_ENABLE_HTTP_REMOTE_USER: "true"
              PAPERLESS_HTTP_REMOTE_USER_HEADER_NAME: HTTP_X_AUTHENTIK_USERNAME
              PAPERLESS_OCR_LANGUAGE: eng
              PAPERLESS_REDIS: redis://localhost:6379
              PAPERLESS_WEBSERVER_WORKERS: "2"
              PAPERLESS_TASK_WORKERS: 2
              PAPERLESS_TIKA_ENABLED: 1
              PAPERLESS_TIME_ZONE: America/Chicago
              PAPERLESS_URL: "https://paperless.${SECRET_DOMAIN}"
              PAPERLESS_AUDIT_LOG_ENABLED: "true"
              PAPERLESS_HOST: 0.0.0.0
              PAPERLESS_METRICS__ENABLE: "true"
              PAPERLESS_METRICS__HOST: 0.0.0.0
              PAPERLESS_METRICS__PORT: &metricsPort 8080
              PAPERLESS_OPEN_REGISTRATION: "true"
              PAPERLESS_PORT: &port 80
              PAPERLESS_THREADS_PER_WORKER: 2
              PAPERLESS_TIKA_ENDPOINT: http://paperless-tika.default.svc.cluster.local:9998
              PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://paperless-gotenberg.default.svc.cluster.local:3000
              PAPERLESS_TIMEZONE: America/Chicago
              PAPERLESS_USE_X_FORWARD_HOST: "true"
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              limits:
                memory: 2Gi
              requests:
                cpu: 25m
            securityContext:
              allowPrivilegeEscalation: false
              capabilities: { drop: ["ALL"] }
        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
    ingress:
      main:
        enabled: true
        className: internal
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: paperless
        advancedMounts:
          main:
            main:
              - path: /data/local
      nas:
        enabled: true
        type: nfs
        server: 10.26.10.5
        path: /volume1/nfs-slow/paperless
        globalMounts:
          - path: /data/nas
    service:
      main:
        ports:
          http:
            port: *port
          metrics:
            port: *metricsPort
